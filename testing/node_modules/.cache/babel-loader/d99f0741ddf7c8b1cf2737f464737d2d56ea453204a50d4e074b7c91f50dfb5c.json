{"ast":null,"code":"var _jsxFileName = \"D:\\\\VTI\\\\Exam\\\\Ral62\\\\testing\\\\src\\\\Pages\\\\Features\\\\Group\\\\Group.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport GroupApi from \"../../../Api/GroupApi\";\n// import getListGroupAction from \"../../../redux/actions/GroupActions\"\nimport { Button, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport \"./Group.scss\";\nimport { selectSelectedRows } from \"../../../redux/selectors/GroupSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'name',\n  headerName: ' Name',\n  width: 200\n}, {\n  field: 'totalMember',\n  headerName: 'TotalMember',\n  type: 'number',\n  width: 300\n}];\nexport default function DataTable(props) {\n  _s();\n  // get All Group\n  const getListGroup = props.getListGroupAction;\n  // const size = props.size;\n  React.useEffect(() => {\n    const getAllGroup = async () => {\n      const result = await GroupApi.getAll();\n      const groups = result.data.content;\n      // console.log(result);\n      setState(groups);\n    };\n    getAllGroup();\n  }, [getListGroup]);\n  const [state, setState] = React.useState([]);\n\n  // Create Group\n  const [showTable, setShowTable] = React.useState(false);\n  const [groupName, setGroupName] = React.useState();\n  const [groupList, setGroupList] = React.useState([]);\n  const handleCreateGroup = async e => {\n    try {\n      const group = await GroupApi.create(groupName);\n      setGroupList([...state, group.data]);\n      setGroupName(\"\");\n      setShowTable(true);\n      if (group.status === 200) {\n        alert(\"Create Success!!!!\");\n        const result = await GroupApi.getAll();\n        const groups = result.data.content;\n        // console.log(result);\n        setState(groups);\n        setShowTable(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Show ô input cho người dùng nhập thông tin tạo Group\n  const handleIconClick = () => {\n    setShowTable(true);\n  };\n\n  // set dữ liệu của người dùng nhập vào\n  const handleGroupNameChange = e => {\n    setGroupName(e.target.value);\n  };\n\n  // Delete Group\n\n  // cập nhật id của Gruop vào selectedGroupId\n  const [selectedGroupId, setSelectedGroupId] = React.useState('');\n  const [Groups, setGroups] = React.useState([]);\n  const handleDeleteGroup = async id => {\n    try {\n      await GroupApi.deleteById(id);\n      // console.log('Object deleted successfully!');\n\n      // Cập nhật danh sách đối tượng sau khi xóa thành công\n      setState(state.filter(group => group.id !== id));\n      setSelectedGroupId(\"\");\n    } catch (error) {\n      console.error('Error deleting object:', error);\n    }\n  };\n  const deleteGroups = async () => {\n    if (props.selectedRows === null || props.selectedRows === undefined || props.selectedRows.length === 0) {\n      alert(\"Delete Group\", \"You have not selected group!\");\n    } else {\n      await GroupApi.deleteByIds(props.selectedRows);\n      // show notification\n      alert(\"Delete Group\", \"Delete Group Successfully!\");\n      // reload group page\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: [!showTable && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleIconClick,\n      children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), showTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Group Name\",\n        value: props.groupName,\n        onChange: handleGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleCreateGroup,\n        children: \"Add to Group List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: deleteGroups,\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: state,\n      columns: columns,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            page: 0,\n            pageSize: 5\n          }\n        }\n      },\n      pageSizeOptions: [5, 30],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable, \"3X3A5IR6kdwLekebmC5oA+V2+/s=\");\n_c = DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","DataGrid","GroupApi","Button","TextField","DeleteIcon","AddCircleOutlineIcon","selectSelectedRows","jsxDEV","_jsxDEV","columns","field","headerName","width","type","DataTable","props","_s","getListGroup","getListGroupAction","useEffect","getAllGroup","result","getAll","groups","data","content","setState","state","useState","showTable","setShowTable","groupName","setGroupName","groupList","setGroupList","handleCreateGroup","e","group","create","status","alert","error","console","log","handleIconClick","handleGroupNameChange","target","value","selectedGroupId","setSelectedGroupId","Groups","setGroups","handleDeleteGroup","id","deleteById","filter","deleteGroups","selectedRows","undefined","length","deleteByIds","style","height","children","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","variant","rows","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","checkboxSelection","_c","$RefreshReg$"],"sources":["D:/VTI/Exam/Ral62/testing/src/Pages/Features/Group/Group.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport GroupApi from \"../../../Api/GroupApi\"\r\n// import getListGroupAction from \"../../../redux/actions/GroupActions\"\r\nimport { Button , TextField } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport \"./Group.scss\"\r\nimport {selectSelectedRows,} from \"../../../redux/selectors/GroupSelector\";\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'name', headerName: ' Name', width: 200 },\r\n  {\r\n    field: 'totalMember',\r\n    headerName: 'TotalMember',\r\n    type: 'number',\r\n    width : 300\r\n  },\r\n \r\n \r\n];\r\n\r\nexport default function DataTable(props) {\r\n\r\n  // get All Group\r\n  const getListGroup = props.getListGroupAction;\r\n  // const size = props.size;\r\n  React.useEffect(() => {\r\n    const getAllGroup = async () => {\r\n      const result = await GroupApi.getAll();\r\n      const groups = result.data.content;\r\n      // console.log(result);\r\n      setState(groups);\r\n    };\r\n    getAllGroup();\r\n  }, [getListGroup]);\r\n\r\n  const [state , setState] = React.useState([]);\r\n\r\n  // Create Group\r\n  const [showTable , setShowTable] = React.useState(false);\r\n\r\n  const [groupName, setGroupName] = React.useState();\r\n\r\n  const [groupList, setGroupList] = React.useState([]);\r\n\r\n  const handleCreateGroup = async  (e) => {\r\n    try {\r\n    \r\n      const group = await GroupApi.create(\r\n         groupName);\r\n      setGroupList([...state, group.data] );\r\n      setGroupName(\"\")\r\n      setShowTable(true)\r\n      if (group.status===200) {\r\n        alert(\"Create Success!!!!\")\r\n        const result = await GroupApi.getAll();\r\n        const groups = result.data.content;\r\n        // console.log(result);\r\n        setState(groups);\r\n        setShowTable(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Show ô input cho người dùng nhập thông tin tạo Group\r\n  const handleIconClick = () => {\r\n    setShowTable(true);\r\n  };\r\n\r\n  // set dữ liệu của người dùng nhập vào\r\n  const handleGroupNameChange = (e) => {\r\n    setGroupName(e.target.value);\r\n  };\r\n\r\n\r\n  // Delete Group\r\n\r\n  // cập nhật id của Gruop vào selectedGroupId\r\n  const [selectedGroupId, setSelectedGroupId] = React.useState('');\r\n\r\n  const [Groups, setGroups] = React.useState([]);\r\n\r\n  const handleDeleteGroup = async (id) => {\r\n    try {\r\n      await GroupApi.deleteById(id)\r\n      // console.log('Object deleted successfully!');\r\n      \r\n      // Cập nhật danh sách đối tượng sau khi xóa thành công\r\n      setState(state.filter((group) => group.id !== id));\r\n      setSelectedGroupId(\"\")\r\n    } catch (error) {\r\n      console.error('Error deleting object:', error);\r\n    }\r\n  };\r\n  const deleteGroups = async () => {\r\n    if (\r\n      props.selectedRows === null ||\r\n      props.selectedRows === undefined ||\r\n      props.selectedRows.length === 0\r\n    ) {\r\n      alert(\"Delete Group\", \"You have not selected group!\");\r\n    } else {\r\n      await GroupApi.deleteByIds(props.selectedRows);\r\n      // show notification\r\n      alert(\"Delete Group\", \"Delete Group Successfully!\");\r\n      // reload group page\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n       {!showTable && (\r\n        <Button  onClick={handleIconClick}>\r\n          <AddCircleOutlineIcon fontSize='large'/>\r\n        </Button>\r\n      )}\r\n\r\n      {showTable && (\r\n        <div>\r\n          <TextField\r\n            label=\"Group Name\"\r\n            value={props.groupName}\r\n            onChange={handleGroupNameChange}\r\n          />\r\n          <Button variant=\"contained\" onClick={handleCreateGroup}>\r\n            Add to Group List\r\n          </Button>\r\n        </div>\r\n      )}\r\n       <Button onClick= {deleteGroups}><DeleteIcon fontSize='large'/></Button>\r\n       {/* <Button onChange={handleSubmit} ><AddCircleOutlineIcon fontSize='large'/></Button>\r\n       <Button onClick={deleteGroup}><DeleteIcon fontSize='large'/></Button> */}\r\n      <DataGrid\r\n       rows={state}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: { page: 0, pageSize: 5},\r\n          },\r\n        }}\r\n        pageSizeOptions={[5, 30]}\r\n        checkboxSelection\r\n      />\r\n     \r\n     \r\n      {/* <Button onClick={handleTable}>onClick</Button> */}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,SAASC,MAAM,EAAGC,SAAS,QAAQ,eAAe;AAClD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAO,cAAc;AACrB,SAAQC,kBAAkB,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,IAAI;EAAEC,UAAU,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC5C;EAAEF,KAAK,EAAE,MAAM;EAAEC,UAAU,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAI,CAAC,EAClD;EACEF,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,aAAa;EACzBE,IAAI,EAAE,QAAQ;EACdD,KAAK,EAAG;AACV,CAAC,CAGF;AAED,eAAe,SAASE,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEvC;EACA,MAAMC,YAAY,GAAGF,KAAK,CAACG,kBAAkB;EAC7C;EACAnB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,MAAM,GAAG,MAAMpB,QAAQ,CAACqB,MAAM,CAAC,CAAC;MACtC,MAAMC,MAAM,GAAGF,MAAM,CAACG,IAAI,CAACC,OAAO;MAClC;MACAC,QAAQ,CAACH,MAAM,CAAC;IAClB,CAAC;IACDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,MAAM,CAACU,KAAK,EAAGD,QAAQ,CAAC,GAAG3B,KAAK,CAAC6B,QAAQ,CAAC,EAAE,CAAC;;EAE7C;EACA,MAAM,CAACC,SAAS,EAAGC,YAAY,CAAC,GAAG/B,KAAK,CAAC6B,QAAQ,CAAC,KAAK,CAAC;EAExD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGjC,KAAK,CAAC6B,QAAQ,CAAC,CAAC;EAElD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGnC,KAAK,CAAC6B,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMO,iBAAiB,GAAG,MAAQC,CAAC,IAAK;IACtC,IAAI;MAEF,MAAMC,KAAK,GAAG,MAAMpC,QAAQ,CAACqC,MAAM,CAChCP,SAAS,CAAC;MACbG,YAAY,CAAC,CAAC,GAAGP,KAAK,EAAEU,KAAK,CAACb,IAAI,CAAE,CAAC;MACrCQ,YAAY,CAAC,EAAE,CAAC;MAChBF,YAAY,CAAC,IAAI,CAAC;MAClB,IAAIO,KAAK,CAACE,MAAM,KAAG,GAAG,EAAE;QACtBC,KAAK,CAAC,oBAAoB,CAAC;QAC3B,MAAMnB,MAAM,GAAG,MAAMpB,QAAQ,CAACqB,MAAM,CAAC,CAAC;QACtC,MAAMC,MAAM,GAAGF,MAAM,CAACG,IAAI,CAACC,OAAO;QAClC;QACAC,QAAQ,CAACH,MAAM,CAAC;QAChBO,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5Bd,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMe,qBAAqB,GAAIT,CAAC,IAAK;IACnCJ,YAAY,CAACI,CAAC,CAACU,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAGD;;EAEA;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlD,KAAK,CAAC6B,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGpD,KAAK,CAAC6B,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMwB,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI;MACF,MAAMpD,QAAQ,CAACqD,UAAU,CAACD,EAAE,CAAC;MAC7B;;MAEA;MACA3B,QAAQ,CAACC,KAAK,CAAC4B,MAAM,CAAElB,KAAK,IAAKA,KAAK,CAACgB,EAAE,KAAKA,EAAE,CAAC,CAAC;MAClDJ,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EACD,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IACEzC,KAAK,CAAC0C,YAAY,KAAK,IAAI,IAC3B1C,KAAK,CAAC0C,YAAY,KAAKC,SAAS,IAChC3C,KAAK,CAAC0C,YAAY,CAACE,MAAM,KAAK,CAAC,EAC/B;MACAnB,KAAK,CAAC,cAAc,EAAE,8BAA8B,CAAC;IACvD,CAAC,MAAM;MACL,MAAMvC,QAAQ,CAAC2D,WAAW,CAAC7C,KAAK,CAAC0C,YAAY,CAAC;MAC9C;MACAjB,KAAK,CAAC,cAAc,EAAE,4BAA4B,CAAC;MACnD;IACF;EACF,CAAC;;EAED,oBACEhC,OAAA;IAAKqD,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAElD,KAAK,EAAE;IAAO,CAAE;IAAAmD,QAAA,GACvC,CAAClC,SAAS,iBACVrB,OAAA,CAACN,MAAM;MAAE8D,OAAO,EAAEpB,eAAgB;MAAAmB,QAAA,eAChCvD,OAAA,CAACH,oBAAoB;QAAC4D,QAAQ,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACT,EAEAxC,SAAS,iBACRrB,OAAA;MAAAuD,QAAA,gBACEvD,OAAA,CAACL,SAAS;QACRmE,KAAK,EAAC,YAAY;QAClBvB,KAAK,EAAEhC,KAAK,CAACgB,SAAU;QACvBwC,QAAQ,EAAE1B;MAAsB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACF7D,OAAA,CAACN,MAAM;QAACsE,OAAO,EAAC,WAAW;QAACR,OAAO,EAAE7B,iBAAkB;QAAA4B,QAAA,EAAC;MAExD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eACA7D,OAAA,CAACN,MAAM;MAAC8D,OAAO,EAAGR,YAAa;MAAAO,QAAA,eAACvD,OAAA,CAACJ,UAAU;QAAC6D,QAAQ,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGxE7D,OAAA,CAACR,QAAQ;MACRyE,IAAI,EAAE9C,KAAM;MACXlB,OAAO,EAAEA,OAAQ;MACjBiE,YAAY,EAAE;QACZC,UAAU,EAAE;UACVC,eAAe,EAAE;YAAEC,IAAI,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAC;QACzC;MACF,CAAE;MACFC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE;MACzBC,iBAAiB;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIC,CAAC;AAEV;AAACrD,EAAA,CAjIuBF,SAAS;AAAAmE,EAAA,GAATnE,SAAS;AAAA,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}