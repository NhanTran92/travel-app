{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\n\n/** Selector **/\nconst groupSelector = state => state.Group;\nconst selectGroupSelector = createSelector(groupSelector, state => state.groups);\nconst selectPageSelector = createSelector(groupSelector, state => state.page);\nconst selectSizeSelector = createSelector(groupSelector, state => state.size);\nconst selectTotalElementSelector = createSelector(groupSelector, state => state.totalElement);\nconst selectSortFieldSelector = createSelector(groupSelector, state => state.sortField);\nconst selectSortTypeSelector = createSelector(groupSelector, state => state.sortType);\nconst selectSearchSelector = createSelector(groupSelector, state => state.search);\nconst selectMinTotalMemberSelector = createSelector(groupSelector, state => state.minTotalMember);\nconst selectMaxTotalMemberSelector = createSelector(groupSelector, state => state.maxTotalMember);\nconst selectSelectedRowsSelector = createSelector(groupSelector, state => state.selectedRows);\nconst selectLoadingSelector = createSelector(groupSelector, state => state.isLoading);\n\n/** function */\n\nexport const selectPage = state => {\n  return selectPageSelector(state);\n};\nexport const selectSize = state => {\n  return selectSizeSelector(state);\n};\nexport const selectTotalElement = state => {\n  return selectTotalElementSelector(state);\n};\nexport const selectSortField = state => {\n  return selectSortFieldSelector(state);\n};\nexport const selectSortType = state => {\n  return selectSortTypeSelector(state);\n};\nexport const selectSearch = state => {\n  return selectSearchSelector(state);\n};\nexport const selectMinTotalMember = state => {\n  return selectMinTotalMemberSelector(state);\n};\nexport const selectMaxTotalMember = state => {\n  return selectMaxTotalMemberSelector(state);\n};\nexport const selectSelectedRows = state => {\n  return selectSelectedRowsSelector(state);\n};\nexport const selectLoading = state => {\n  return selectLoadingSelector(state);\n};\n/** function */\nexport const selectGroup = state => {\n  return selectGroupSelector(state);\n};","map":{"version":3,"names":["createSelector","groupSelector","state","Group","selectGroupSelector","groups","selectPageSelector","page","selectSizeSelector","size","selectTotalElementSelector","totalElement","selectSortFieldSelector","sortField","selectSortTypeSelector","sortType","selectSearchSelector","search","selectMinTotalMemberSelector","minTotalMember","selectMaxTotalMemberSelector","maxTotalMember","selectSelectedRowsSelector","selectedRows","selectLoadingSelector","isLoading","selectPage","selectSize","selectTotalElement","selectSortField","selectSortType","selectSearch","selectMinTotalMember","selectMaxTotalMember","selectSelectedRows","selectLoading","selectGroup"],"sources":["D:/VTI/Exam/Ral62/testing/src/redux/selectors/GroupSelector.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n/** Selector **/\r\nconst groupSelector = (state) => state.Group;\r\n\r\nconst selectGroupSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.groups\r\n);\r\n\r\nconst selectPageSelector = createSelector(groupSelector, (state) => state.page);\r\n\r\nconst selectSizeSelector = createSelector(groupSelector, (state) => state.size);\r\n\r\nconst selectTotalElementSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.totalElement\r\n);\r\n\r\nconst selectSortFieldSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.sortField\r\n);\r\n\r\nconst selectSortTypeSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.sortType\r\n);\r\n\r\nconst selectSearchSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.search\r\n);\r\n\r\nconst selectMinTotalMemberSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.minTotalMember\r\n);\r\n\r\nconst selectMaxTotalMemberSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.maxTotalMember\r\n);\r\n\r\nconst selectSelectedRowsSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.selectedRows\r\n);\r\n\r\nconst selectLoadingSelector = createSelector(\r\n  groupSelector,\r\n  (state) => state.isLoading\r\n);\r\n\r\n/** function */\r\n\r\nexport const selectPage = (state) => {\r\n  return selectPageSelector(state);\r\n};\r\n\r\nexport const selectSize = (state) => {\r\n  return selectSizeSelector(state);\r\n};\r\n\r\nexport const selectTotalElement = (state) => {\r\n  return selectTotalElementSelector(state);\r\n};\r\n\r\nexport const selectSortField = (state) => {\r\n  return selectSortFieldSelector(state);\r\n};\r\n\r\nexport const selectSortType = (state) => {\r\n  return selectSortTypeSelector(state);\r\n};\r\n\r\nexport const selectSearch = (state) => {\r\n  return selectSearchSelector(state);\r\n};\r\n\r\nexport const selectMinTotalMember = (state) => {\r\n  return selectMinTotalMemberSelector(state);\r\n};\r\n\r\nexport const selectMaxTotalMember = (state) => {\r\n  return selectMaxTotalMemberSelector(state);\r\n};\r\n\r\nexport const selectSelectedRows = (state) => {\r\n  return selectSelectedRowsSelector(state);\r\n};\r\n\r\nexport const selectLoading = (state) => {\r\n  return selectLoadingSelector(state);\r\n};\r\n/** function */\r\nexport const selectGroup = (state) => {\r\n  return selectGroupSelector(state);\r\n};\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;;AAEjD;AACA,MAAMC,aAAa,GAAIC,KAAK,IAAKA,KAAK,CAACC,KAAK;AAE5C,MAAMC,mBAAmB,GAAGJ,cAAc,CACxCC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACG,MACnB,CAAC;AAED,MAAMC,kBAAkB,GAAGN,cAAc,CAACC,aAAa,EAAGC,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC;AAE/E,MAAMC,kBAAkB,GAAGR,cAAc,CAACC,aAAa,EAAGC,KAAK,IAAKA,KAAK,CAACO,IAAI,CAAC;AAE/E,MAAMC,0BAA0B,GAAGV,cAAc,CAC/CC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACS,YACnB,CAAC;AAED,MAAMC,uBAAuB,GAAGZ,cAAc,CAC5CC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACW,SACnB,CAAC;AAED,MAAMC,sBAAsB,GAAGd,cAAc,CAC3CC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACa,QACnB,CAAC;AAED,MAAMC,oBAAoB,GAAGhB,cAAc,CACzCC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACe,MACnB,CAAC;AAED,MAAMC,4BAA4B,GAAGlB,cAAc,CACjDC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACiB,cACnB,CAAC;AAED,MAAMC,4BAA4B,GAAGpB,cAAc,CACjDC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACmB,cACnB,CAAC;AAED,MAAMC,0BAA0B,GAAGtB,cAAc,CAC/CC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACqB,YACnB,CAAC;AAED,MAAMC,qBAAqB,GAAGxB,cAAc,CAC1CC,aAAa,EACZC,KAAK,IAAKA,KAAK,CAACuB,SACnB,CAAC;;AAED;;AAEA,OAAO,MAAMC,UAAU,GAAIxB,KAAK,IAAK;EACnC,OAAOI,kBAAkB,CAACJ,KAAK,CAAC;AAClC,CAAC;AAED,OAAO,MAAMyB,UAAU,GAAIzB,KAAK,IAAK;EACnC,OAAOM,kBAAkB,CAACN,KAAK,CAAC;AAClC,CAAC;AAED,OAAO,MAAM0B,kBAAkB,GAAI1B,KAAK,IAAK;EAC3C,OAAOQ,0BAA0B,CAACR,KAAK,CAAC;AAC1C,CAAC;AAED,OAAO,MAAM2B,eAAe,GAAI3B,KAAK,IAAK;EACxC,OAAOU,uBAAuB,CAACV,KAAK,CAAC;AACvC,CAAC;AAED,OAAO,MAAM4B,cAAc,GAAI5B,KAAK,IAAK;EACvC,OAAOY,sBAAsB,CAACZ,KAAK,CAAC;AACtC,CAAC;AAED,OAAO,MAAM6B,YAAY,GAAI7B,KAAK,IAAK;EACrC,OAAOc,oBAAoB,CAACd,KAAK,CAAC;AACpC,CAAC;AAED,OAAO,MAAM8B,oBAAoB,GAAI9B,KAAK,IAAK;EAC7C,OAAOgB,4BAA4B,CAAChB,KAAK,CAAC;AAC5C,CAAC;AAED,OAAO,MAAM+B,oBAAoB,GAAI/B,KAAK,IAAK;EAC7C,OAAOkB,4BAA4B,CAAClB,KAAK,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMgC,kBAAkB,GAAIhC,KAAK,IAAK;EAC3C,OAAOoB,0BAA0B,CAACpB,KAAK,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMiC,aAAa,GAAIjC,KAAK,IAAK;EACtC,OAAOsB,qBAAqB,CAACtB,KAAK,CAAC;AACrC,CAAC;AACD;AACA,OAAO,MAAMkC,WAAW,GAAIlC,KAAK,IAAK;EACpC,OAAOE,mBAAmB,CAACF,KAAK,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}