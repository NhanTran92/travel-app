{"ast":null,"code":"var _jsxFileName = \"D:\\\\VTI\\\\Exam\\\\Ral62\\\\testing\\\\src\\\\Pages\\\\Features\\\\Group\\\\Group.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport GroupApi from \"../../../Api/GroupApi\";\n// import getListGroupAction from \"../../../redux/actions/GroupActions\"\nimport { Button, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport \"./Group.scss\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataTable(props) {\n  _s();\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'name',\n    headerName: ' Name',\n    width: 200\n  }, {\n    field: 'totalMember',\n    headerName: 'TotalMember',\n    type: 'number',\n    width: 300\n  }, {\n    width: 90,\n    renderCell: params => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n      fontSize: \"small\",\n      onClick: () => handleDeleteGroup(params.row.id),\n      style: {\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }];\n\n  // get All Group\n  const getListGroup = props.getListGroupAction;\n  // const size = props.size;\n  React.useEffect(() => {\n    const getAllGroup = async () => {\n      const result = await GroupApi.getAll();\n      const groups = result.data.content;\n      // console.log(result);\n      setState(groups);\n    };\n    getAllGroup();\n  }, [getListGroup]);\n  const [state, setState] = React.useState([]);\n\n  // Get Group\n  const getGroup = async () => {\n    const result = await GroupApi.getAll();\n    const groups = result.data.content;\n    // console.log(result);\n    setState(groups);\n  };\n  // Create Group\n  const [showTable, setShowTable] = React.useState(false);\n  const [groupName, setGroupName] = React.useState();\n  const [groupList, setGroupList] = React.useState([]);\n  const handleCreateGroup = async e => {\n    try {\n      const group = await GroupApi.create(groupName);\n      setGroupList([...state, group.data]);\n      setGroupName(\"\");\n      // setShowTable(true)\n      if (group.status === 200) {\n        alert(\"Create Success!!!!\");\n        // const result = await GroupApi.getAll();\n        // const groups = result.data.content;\n        // // console.log(result);\n        // setState(groups);\n        getGroup();\n        setShowTable(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Show ô input cho người dùng nhập thông tin tạo Group\n  const handleIconClick = () => {\n    setShowTable(true);\n  };\n\n  // set dữ liệu của người dùng nhập vào\n  const handleGroupNameChange = e => {\n    setGroupName(e.target.value);\n  };\n\n  // Delete Group\n\n  // cập nhật id của Gruop vào selectedGroupId\n  const [selectedGroupId, setSelectedGroupId] = React.useState('');\n  const [Groups, setGroups] = React.useState([]);\n  const handleDeleteGroup = async id => {\n    try {\n      const group = await GroupApi.deleteById(id);\n      // setState(state.filter((group) => group.id !== id));\n      const updatedRows = state.filter(row => row.id !== id);\n      if (group.status === 200) {\n        alert(\"Delete Success!!!!\");\n        const result = await GroupApi.getAll();\n        const groups = result.data.content;\n        setState(groups);\n      }\n    } catch (error) {\n      console.error('Error deleting object:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(SearchIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), !showTable && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleIconClick,\n      children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), showTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Group Name\",\n        placeholder: \"Group Name\",\n        value: props.groupName,\n        onChange: handleGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleCreateGroup,\n        children: \"Add to Group List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: state,\n      columns: columns,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            page: 0,\n            pageSize: 5\n          }\n        }\n      },\n      pageSizeOptions: [5, 30],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable, \"3X3A5IR6kdwLekebmC5oA+V2+/s=\");\n_c = DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","DataGrid","GroupApi","Button","TextField","DeleteIcon","AddCircleOutlineIcon","SearchIcon","jsxDEV","_jsxDEV","DataTable","props","_s","columns","field","headerName","width","type","renderCell","params","fontSize","onClick","handleDeleteGroup","row","id","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","getListGroup","getListGroupAction","useEffect","getAllGroup","result","getAll","groups","data","content","setState","state","useState","getGroup","showTable","setShowTable","groupName","setGroupName","groupList","setGroupList","handleCreateGroup","e","group","create","status","alert","error","console","log","handleIconClick","handleGroupNameChange","target","value","selectedGroupId","setSelectedGroupId","Groups","setGroups","deleteById","updatedRows","filter","height","children","label","placeholder","onChange","variant","rows","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","checkboxSelection","_c","$RefreshReg$"],"sources":["D:/VTI/Exam/Ral62/testing/src/Pages/Features/Group/Group.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport GroupApi from \"../../../Api/GroupApi\"\r\n// import getListGroupAction from \"../../../redux/actions/GroupActions\"\r\nimport { Button , TextField } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport \"./Group.scss\"\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n\r\n\r\nexport default function DataTable(props) {\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: ' Name', width: 200 },\r\n    {\r\n      field: 'totalMember',\r\n      headerName: 'TotalMember',\r\n      type: 'number',\r\n      width : 300\r\n    },\r\n    {\r\n    \r\n      width: 90,\r\n      renderCell: (params) => (\r\n        <DeleteIcon fontSize='small'\r\n        onClick={() => handleDeleteGroup(params.row.id)}\r\n        style={{ cursor: 'pointer' }} />\r\n      ),\r\n    },\r\n   \r\n   \r\n  ];\r\n  \r\n\r\n  // get All Group\r\n  const getListGroup = props.getListGroupAction;\r\n  // const size = props.size;\r\n  React.useEffect(() => {\r\n    const getAllGroup = async () => {\r\n      const result = await GroupApi.getAll();\r\n      const groups = result.data.content;\r\n      // console.log(result);\r\n      setState(groups);\r\n    };\r\n    getAllGroup();\r\n  }, [getListGroup]);\r\n\r\n  const [state , setState] = React.useState([]);\r\n\r\n  // Get Group\r\n  const getGroup =async () =>{\r\n    const result = await GroupApi.getAll();\r\n    const groups = result.data.content;\r\n    // console.log(result);\r\n    setState(groups);\r\n  }\r\n  // Create Group\r\n  const [showTable , setShowTable] = React.useState(false);\r\n\r\n  const [groupName, setGroupName] = React.useState();\r\n\r\n  const [groupList, setGroupList] = React.useState([]);\r\n\r\n  const handleCreateGroup = async  (e) => {\r\n    try {\r\n    \r\n      const group = await GroupApi.create(\r\n         groupName);\r\n      setGroupList([...state, group.data] );\r\n      setGroupName(\"\")\r\n      // setShowTable(true)\r\n      if (group.status===200) {\r\n        alert(\"Create Success!!!!\")\r\n        // const result = await GroupApi.getAll();\r\n        // const groups = result.data.content;\r\n        // // console.log(result);\r\n        // setState(groups);\r\n        getGroup();\r\n        setShowTable(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Show ô input cho người dùng nhập thông tin tạo Group\r\n  const handleIconClick = () => {\r\n    setShowTable(true);\r\n  };\r\n\r\n  // set dữ liệu của người dùng nhập vào\r\n  const handleGroupNameChange = (e) => {\r\n    setGroupName(e.target.value);\r\n  };\r\n\r\n\r\n  // Delete Group\r\n\r\n  // cập nhật id của Gruop vào selectedGroupId\r\n  const [selectedGroupId, setSelectedGroupId] = React.useState('');\r\n\r\n  const [Groups, setGroups] = React.useState([]);\r\n\r\n  const handleDeleteGroup = async (id) => {\r\n    try {\r\n      const group = await GroupApi.deleteById(id)\r\n      // setState(state.filter((group) => group.id !== id));\r\n      const updatedRows = state.filter((row) => row.id !== id);\r\n      if (group.status===200) {\r\n        alert(\"Delete Success!!!!\")\r\n        const result = await GroupApi.getAll();\r\n        const groups = result.data.content;\r\n        setState(groups);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting object:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n\r\n      <Button> <SearchIcon fontSize='large'/></Button>\r\n     \r\n       {!showTable && (\r\n        <Button  onClick={handleIconClick}>\r\n          <AddCircleOutlineIcon fontSize='large'/>\r\n        </Button>\r\n      )}\r\n\r\n      {showTable && (\r\n        <div>\r\n          <TextField\r\n            label=\"Group Name\"\r\n            placeholder='Group Name'\r\n            value={props.groupName}\r\n            onChange={handleGroupNameChange}\r\n          />\r\n          <Button variant=\"contained\" onClick={handleCreateGroup}>\r\n            Add to Group List\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <DataGrid\r\n       rows={state}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: { page: 0, pageSize: 5},\r\n          },\r\n        }}\r\n        pageSizeOptions={[5, 30]}\r\n        checkboxSelection\r\n      />\r\n     \r\n     \r\n      {/* <Button onClick={handleTable}>onClick</Button> */}\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}