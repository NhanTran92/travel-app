{"ast":null,"code":"import httpClient from \"./httpClient\";\nconst url = \"/users\";\nconst create = (firstname, lastname, username, email, password) => {\n  const body = {\n    firstName: firstname,\n    lastName: lastname,\n    userName: username,\n    email: email,\n    password: password\n  };\n  return httpClient.post(url, body);\n};\nconst resendEmail = email => {\n  const parameters = {\n    email: email\n  };\n  return httpClient.get(`${url}/userRegistrationConfirmRequest`, {\n    params: parameters\n  });\n};\nconst resendEmailToResetPassword = email => {\n  const parameters = {\n    email: email\n  };\n  return httpClient.get(`${url}/resendResetPassword`, {\n    params: parameters\n  });\n};\nconst requestResetPassword = email => {\n  const parameters = {\n    email: email\n  };\n  return httpClient.get(`${url}/resetPasswordRequest`, {\n    params: parameters\n  });\n};\nconst resetPassword = (token, newPassword) => {\n  const parameters = {\n    token: token,\n    newPassword: newPassword\n  };\n  return httpClient.get(`${url}/resetPassword`, {\n    params: parameters\n  });\n};\nconst getProfile = () => {\n  return httpClient.get(`${url}/profile`);\n};\nconst updateProfile = avatarUrl => {\n  const body = {\n    avatarUrl: avatarUrl\n  };\n  return httpClient.put(`${url}/profile`, body);\n};\nconst getToken = token => {\n  const parameters = {\n    token: token\n  };\n  return httpClient.get(`${url}/activeUser`, {\n    params: parameters\n  });\n};\nconst existsByEmail = email => {\n  return httpClient.get(`${url}/email/${email}`);\n};\nconst existsByUsername = username => {\n  return httpClient.get(`${url}/userName/${username}`);\n};\n// export\nconst httpClients = {\n  existsByEmail,\n  resendEmailToResetPassword,\n  resetPassword,\n  existsByUsername,\n  create,\n  resendEmail,\n  requestResetPassword,\n  getToken,\n  getProfile,\n  updateProfile\n};\nexport default httpClients;","map":{"version":3,"names":["httpClient","url","create","firstname","lastname","username","email","password","body","firstName","lastName","userName","post","resendEmail","parameters","get","params","resendEmailToResetPassword","requestResetPassword","resetPassword","token","newPassword","getProfile","updateProfile","avatarUrl","put","getToken","existsByEmail","existsByUsername","httpClients"],"sources":["D:/VTI/Github/travel-app/testing/src/Api/UserApi.js"],"sourcesContent":["import httpClient from \"./httpClient\";\r\n\r\nconst url = \"/users\";\r\n\r\nconst create = (firstname, lastname, username, email, password) => {\r\n  const body = {\r\n    firstName: firstname,\r\n    lastName: lastname,\r\n    userName: username,\r\n    email: email,\r\n    password: password,\r\n  };\r\n  return httpClient.post(url, body);\r\n};\r\nconst resendEmail = (email) => {\r\n  const parameters = {\r\n    email: email,\r\n  };\r\n  return httpClient.get(`${url}/userRegistrationConfirmRequest`, {\r\n    params: parameters,\r\n  });\r\n};\r\n\r\nconst resendEmailToResetPassword = (email) => {\r\n  const parameters = {\r\n    email: email,\r\n  };\r\n  return httpClient.get(`${url}/resendResetPassword`, {\r\n    params: parameters,\r\n  });\r\n};\r\n\r\nconst requestResetPassword = (email) => {\r\n  const parameters = {\r\n    email: email,\r\n  };\r\n  return httpClient.get(`${url}/resetPasswordRequest`, {\r\n    params: parameters,\r\n  });\r\n};\r\nconst resetPassword = (token, newPassword) => {\r\n  const parameters = {\r\n    token: token,\r\n    newPassword: newPassword,\r\n  };\r\n\r\n  return httpClient.get(`${url}/resetPassword`, {\r\n    params: parameters,\r\n  });\r\n};\r\n\r\nconst getProfile = () => {\r\n  return httpClient.get(`${url}/profile`);\r\n};\r\n\r\nconst updateProfile = (avatarUrl) => {\r\n  const body = {\r\n    avatarUrl: avatarUrl,\r\n  };\r\n  return httpClient.put(`${url}/profile`, body);\r\n};\r\n\r\nconst getToken = (token) => {\r\n  const parameters = {\r\n    token: token,\r\n  };\r\n\r\n  return httpClient.get(`${url}/activeUser`, {\r\n    params: parameters,\r\n  });\r\n};\r\n\r\nconst existsByEmail = (email) => {\r\n  return httpClient.get(`${url}/email/${email}`);\r\n};\r\n\r\nconst existsByUsername = (username) => {\r\n  return httpClient.get(`${url}/userName/${username}`);\r\n};\r\n// export\r\nconst httpClients = {\r\n  existsByEmail,\r\n  resendEmailToResetPassword,\r\n  resetPassword,\r\n  existsByUsername,\r\n  create,\r\n  resendEmail,\r\n  requestResetPassword,\r\n  getToken,\r\n  getProfile,\r\n  updateProfile,\r\n};\r\nexport default httpClients;\r\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AAErC,MAAMC,GAAG,GAAG,QAAQ;AAEpB,MAAMC,MAAM,GAAGA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACjE,MAAMC,IAAI,GAAG;IACXC,SAAS,EAAEN,SAAS;IACpBO,QAAQ,EAAEN,QAAQ;IAClBO,QAAQ,EAAEN,QAAQ;IAClBC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACZ,CAAC;EACD,OAAOP,UAAU,CAACY,IAAI,CAACX,GAAG,EAAEO,IAAI,CAAC;AACnC,CAAC;AACD,MAAMK,WAAW,GAAIP,KAAK,IAAK;EAC7B,MAAMQ,UAAU,GAAG;IACjBR,KAAK,EAAEA;EACT,CAAC;EACD,OAAON,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,iCAAgC,EAAE;IAC7De,MAAM,EAAEF;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAMG,0BAA0B,GAAIX,KAAK,IAAK;EAC5C,MAAMQ,UAAU,GAAG;IACjBR,KAAK,EAAEA;EACT,CAAC;EACD,OAAON,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,sBAAqB,EAAE;IAClDe,MAAM,EAAEF;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAMI,oBAAoB,GAAIZ,KAAK,IAAK;EACtC,MAAMQ,UAAU,GAAG;IACjBR,KAAK,EAAEA;EACT,CAAC;EACD,OAAON,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,uBAAsB,EAAE;IACnDe,MAAM,EAAEF;EACV,CAAC,CAAC;AACJ,CAAC;AACD,MAAMK,aAAa,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAAK;EAC5C,MAAMP,UAAU,GAAG;IACjBM,KAAK,EAAEA,KAAK;IACZC,WAAW,EAAEA;EACf,CAAC;EAED,OAAOrB,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,gBAAe,EAAE;IAC5Ce,MAAM,EAAEF;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;EACvB,OAAOtB,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,UAAS,CAAC;AACzC,CAAC;AAED,MAAMsB,aAAa,GAAIC,SAAS,IAAK;EACnC,MAAMhB,IAAI,GAAG;IACXgB,SAAS,EAAEA;EACb,CAAC;EACD,OAAOxB,UAAU,CAACyB,GAAG,CAAE,GAAExB,GAAI,UAAS,EAAEO,IAAI,CAAC;AAC/C,CAAC;AAED,MAAMkB,QAAQ,GAAIN,KAAK,IAAK;EAC1B,MAAMN,UAAU,GAAG;IACjBM,KAAK,EAAEA;EACT,CAAC;EAED,OAAOpB,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,aAAY,EAAE;IACzCe,MAAM,EAAEF;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAMa,aAAa,GAAIrB,KAAK,IAAK;EAC/B,OAAON,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,UAASK,KAAM,EAAC,CAAC;AAChD,CAAC;AAED,MAAMsB,gBAAgB,GAAIvB,QAAQ,IAAK;EACrC,OAAOL,UAAU,CAACe,GAAG,CAAE,GAAEd,GAAI,aAAYI,QAAS,EAAC,CAAC;AACtD,CAAC;AACD;AACA,MAAMwB,WAAW,GAAG;EAClBF,aAAa;EACbV,0BAA0B;EAC1BE,aAAa;EACbS,gBAAgB;EAChB1B,MAAM;EACNW,WAAW;EACXK,oBAAoB;EACpBQ,QAAQ;EACRJ,UAAU;EACVC;AACF,CAAC;AACD,eAAeM,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}